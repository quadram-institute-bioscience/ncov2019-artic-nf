// Global default params, used in configs
params {

  // Workflow flags
  outdir = './results'
  get_all = false
  // Boilerplate options
  help = false
  tracedir = "${params.outdir}/pipeline_info"

  // cache option makes it a bit easier to set conda or singularity cacheDir
  cache = ''
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Resources
includeConfig 'conf/resources.config'

if ( params.medaka || params.nanopolish ){
    includeConfig 'conf/nanopore.config'
}

if ( params.illumina ){
    includeConfig 'conf/illumina.config'
}


profiles {
  conda { 
    if ( params.medaka || params.nanopolish ) {
       process.conda = "$baseDir/environments/nanopore/environment.yml"

     } else if (params.illumina) {
      //  process.conda = "$baseDir/environments/illumina/environment.yml"
      process.conda = "/home/ubuntu/miniconda3/envs/artic-ncov2019-illumina"
     }
     if (params.cache){
       conda.cacheDir = params.cache
     }
    //  includeConfig 'conf/conda.config'
  }
  docker {
    docker.enabled = true
    fixOwnership = true
    runOptions = "-u \$(id -u):\$(id -g)"
  }
  singularity {
    singularity.enabled = true 
    singularity.autoMounts = true

    if (params.medaka || params.nanopolish){
      process.container = "file:///${baseDir}/container/artic-ncov2019-nanopore-1.2.1.sif"
    } else if (params.illumina) {
      process.container = "file:///${baseDir}/container/artic-ncov2019-illumina.sif"
    }
    if (params.cache){
      singularity.cacheDir = params.cache
    }
  }
  slurm {
    process.executor = 'slurm'
  }
  lsf {
    process.executor = 'lsf'
  }
  gls {
    process.executor = 'google-lifesciences'
    includeConfig 'conf/gls.config'
  }
}

// COG-UK institutional config
includeConfig 'conf/coguk.config'

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = false
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = false
  file = "${params.tracedir}/execution_report.html"
}
trace {
  enabled = false
  file = "${params.tracedir}/execution_trace.txt"
}
dag {
  enabled = false
  file = "${params.tracedir}/pipeline_dag.svg"
}

manifest {
  author = 'Matt Bull'
  description = 'Nextflow for running the Artic ncov2019 pipeline'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.01.0'
  version = '0.1.0'
}

